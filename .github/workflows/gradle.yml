
name: Java CI with Gradle
 
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file

    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0

    - name: chmod
      run: chmod 777 ./gradlew

    - name: Build with Gradle Wrapper
      run: ./gradlew build

    - name: docker login
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: docker image build
      run: docker build -t lkh8033/nextlevel .

    - name: docker Hub push
      run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/nextlevel

  ssh:
    needs: build
    runs-on: ubuntu-latest

    steps:
     - name: ssh
       uses: appleboy/ssh-action@v0.1.6
       with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USERNAME }}
        key: ${{ secrets.SERVER_KEY }}
        port: 22
        script: |
         rm -rf log.text
         echo "rm log file and start first" >> log.text
        
         echo "remove old docker container" >> log.text
         docker stop container
         docker rm container
        
         echo "pull docker at ssh server" >> log.text
         docker pull lkh8033/nextlevel:latest
           
         echo "start new container" >> log.text
         
         docker run -d \
          --name container \
          lkh8033/nextlevel:latest
