
name: Java CI with Gradle
 
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file

    - name: Setup Gradle
      uses: gradle/gradle-build-action@v3
      with:
       cache-disabled: true
      # uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0

    - name: chmod
      run: chmod 777 ./gradlew

    - name: Clean and Build
      run: ./gradlew clean build

    - name: Build with Gradle Wrapper
      run: ./gradlew build

    - name: docker login
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: docker image build
      run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/nextlevel-springboot -f Dockerfile .

      # Step 7: Build Nginx image
    - name: Build Nginx Docker image
      run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/nextlevel-nginx -f nginx/Dockerfile .
          # Step 8: Push both Docker images to Docker Hub
    - name: Push Docker images
      run: |
        docker push ${{ secrets.DOCKERHUB_USERNAME }}/nextlevel-springboot
        docker push ${{ secrets.DOCKERHUB_USERNAME }}/nextlevel-nginx

  ssh:
    needs: build
    runs-on: ubuntu-latest

    steps:
     - uses: actions/checkout@v4
   
     - name: scp
       uses: appleboy/scp-action@v0.1.6
       with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USERNAME }}
        key: ${{ secrets.SERVER_KEY }}
        source: docker-compose.yml, springboot.conf
        target: "/home/${{ secrets.SERVER_USERNAME }}/"
 

     - name: ssh
       uses: appleboy/ssh-action@v0.1.6
       with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USERNAME }}
        key: ${{ secrets.SERVER_KEY }}
        port: 22
        script: |
         docker stop springboot nginx
         docker rm springboot nginx
         docker rmi springboot
         docker rmi nginx
        
         docker pull ${{ secrets.DOCKERHUB_USERNAME }}/nextlevel-springboot:latest
         docker pull ${{ secrets.DOCKERHUB_USERNAME }}/nextlevel-nginx:latest
         
         docker-compose up -d

         docker image prune -f
